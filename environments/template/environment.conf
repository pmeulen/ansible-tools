#@IgnoreInspection BashAddShebang
# Configuration for the "create_new_environment.sh" script.

# Set to 1 to encrypt all keys, secrets and passwords with a symmetric key using KEYCZAR.
# Requires python KEYCZAR to be installed (https://github.com/google/keyczar)
# Set to 0 to write keys, secrets and passwords in plaintext.
USE_KEYCZAR=1

# Name of the keystore dir in the environment
KEYSTORE_DIR="ansible-keystore"


### Passwords ###
# Length of generated passwords in characters
PASSWORD_LENGTH=15
# List of passwords to generate. Specify the filename of the password file to create. Passwords are
# stored in the "password" directory
PASSWORDS=(
    "some_password"
)


### Secrets ###
# Length of generated secrets in characters
SECRET_LENGTH=40
# List of secrets to generate. Specify the filename of the secret file to create. Secrets are
# stored in the "secret" directory
SECRETS=(
    "some_secret"
)


### SSL Server certificates ###
SSL_DOMAIN='example.com' # Domain for SSL certs
SSL_O='Development VM' # Organisation for SSL certs
SSL_C='NL' # Country for SSL certs

# Distinguished name of the Root CA certificate for issuing the SSL certificates
SSL_ROOT_DN="/CN=Root CA/O=${SSL_O}/C=${SSL_C}" # DN for SSL root CA

# List of SSL/TLS certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the subject distinguished name of the certificate in OpenSSL format
SSL_CERTS=(
    "some_ssl_cert:/CN=www.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
)


### Self-signed certificates ###
SAML_O="Development VM"
SAML_C="NL"

# List of self signed certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the distinguised name of the certificate in OpenSSL format
SAML_CERTS=(
    "some_saml_cert:/CN=My SP/O=${SAML_O}/C=${SAML_C}"
)


### SSH keys ###

# List of ssh keypairs to generate. Format: "<basename>"
# Where:
# - <basename> is the basename used for the private and public key on disk
SSH_KEYS=(
    "some_ssh_key"
)
